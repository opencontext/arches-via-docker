services:

  arches_db:
    container_name: arches_db
    image: postgis/postgis:14-3.2
    env_file:
      - ./.env
    environment:
      - PGUSER=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgis
      - POSTGRES_MULTIPLE_EXTENSIONS=postgis,postgis_topology
    restart: always
    volumes:
        - postgres-data:/var/lib/postgresql/data/
        - postgres-log:/var/log/postgresql
        - ./init-unix.sql:/docker-entrypoint-initdb.d/init.sql # to set up the DB template
        - ../arches_data/:/arches_data
    ports:
      - '5434:5432'
    logging:
      driver: "json-file"
      options:
        max-size: "10k"
        max-file: "10"
    networks:
      - afrc_net

  arches_elasticsearch:
    container_name: arches_elasticsearch
    image: elasticsearch:8.5.3
    restart: always
    env_file:
      - ./.env
    environment:
      - TZ="${TZ}"
      - xpack.security.enabled=false
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms400m -Xmx400m"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - "9202:9200"
      - "9302:9300"
    logging:
      driver: "json-file"
      options:
        max-size: "10k"
        max-file: "10"
    networks:
      - afrc_net

  arches_redis:
    container_name: arches_redis
    image: "redis:6-alpine"
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - "redisdata:/data"
    command: "redis-server"
    logging:
      driver: "json-file"
      options:
        max-size: "10k"
        max-file: "10"
    networks:
      - afrc_net

  cantaloupe_afs_plocal:
    container_name: cantaloupe_afs_plocal
    image: uclalibrary/cantaloupe:5.0.3-0
    volumes:
      - cantaloupe_afs_plocal:/imageroot
    ports:
      - 8183:8182
    env_file:
    - ./.env
    networks:
    - afrc_net

  arches:
    container_name: arches
    image: arches_afrc
    env_file:
      - ./.env
    build:
      context: .
      dockerfile: arches/Dockerfile
      args:
        ARCHES_PIP_VERSION: ${ARCHES_PIP_VERSION}
        ARCHES_PROJECT: ${ARCHES_PROJECT}
        ARCHES_ROOT: ${ARCHES_ROOT}
        APP_ROOT: ${APP_ROOT}
        AFS_CLONE: ${AFS_CLONE}
        AFS_GIT_BRANCH: ${AFS_GIT_BRANCH}
        AFS_REPO_DIR: ${AFS_REPO_DIR}
        APP_COMP_FOLDER: ${APP_COMP_FOLDER}
        UPLOADED_FILES_FOLDER: ${UPLOADED_FILES_FOLDER}
    environment:
      - DEBUG="${DJANGO_DEBUG}"
      - DJANGO_DEBUG=${DJANGO_DEBUG}
      - DJANGO_MODE=${DJANGO_MODE}
      - ARCHES_PROJECT=${ARCHES_PROJECT}
      - PGDBNAME=${PGDBNAME}
      - PGUSERNAME=${PGUSERNAME}
      - PGPASSWORD=${PGPASSWORD}
      - PGHOST=${PGHOST}
      - PGPORT=${PGPORT}
      - ARCHES_NAMESPACE=${ARCHES_NAMESPACE}
    stdin_open: true # docker run -i
    tty: true        # docker run -t
    ports:
      - "5432:5432"
      - 8004:8000
      - 5678:5678
      - 5984:5984
    depends_on:
      - arches_db
      - arches_elasticsearch
      - arches_redis
    command:
      - run_arches
    expose:
      - 8004:8000
    volumes:
      - arches-log:/web_root/logs
      - arches-static:/static_root
      - ../arches_data/:/arches_data
      - cantaloupe_afs_plocal:${UPLOADED_FILES_FOLDER}
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "10"
    networks:
      - afrc_net

networks:
  afrc_net:
    driver: bridge
    name: afrc_net

volumes:
  redisdata:
  couchdb-data:
  couchdb-log:
  postgres-data:
  postgres-log:
  elasticsearch-data:
  arches-log:
  arches-static:
  cantaloupe_afs_plocal:
